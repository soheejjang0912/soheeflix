{"ast":null,"code":"var _jsxFileName = \"/Users/soheejjang/programming/react/soheeflix/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n\n  /* then으로 비동기 코드 가져오기\n  const [movies, setMovies] = useState([]);\n  useEffect(()=>{\n    fetch(\n      `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year`) //문자열 안에 변수(variable) 넣을 때 `` 사용 \n    .then((response) => response.json())\n    .then(json => {\n        setMovies(json.data.movies);\n        setLoading(false);}\n    ); \n  },[]);*/\n  const getMovies = async () => {};\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"soheeflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","loading","setLoading","getMovies","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/soheejjang/programming/react/soheeflix/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  \n  /* then으로 비동기 코드 가져오기\n  const [movies, setMovies] = useState([]);\n  useEffect(()=>{\n    fetch(\n      `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year`) //문자열 안에 변수(variable) 넣을 때 `` 사용 \n    .then((response) => response.json())\n    .then(json => {\n        setMovies(json.data.movies);\n        setLoading(false);}\n    ); \n  },[]);*/\n  const getMovies = async() => {\n\n  };\n  useEffect(()=> {\n    getMovies()\n  }, []);\n \n  return (\n    <div>\n      {loading ? <h1>loading...</h1> : null}\n      <h1>soheeflix</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE5C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAW,CAE7B,CAAC;EACDR,SAAS,CAAC,MAAK;IACbQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAM,QAAA,GACGH,OAAO,gBAAGH,OAAA;MAAAM,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAAG,IAAI,eACrCV,OAAA;MAAAM,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACR,EAAA,CA3BQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}